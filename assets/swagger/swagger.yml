swagger: "2.0"

info:
  title: busroutes
  version: 0.0.1

schemes:
  - http

consumes:
  - application/json

produces:
  - application/json

securityDefinitions:
  authorization_header:
    description: Аутентификационный токен. Формат "Bearer токен"
    type: apiKey
    name: Authorization
    in: header

definitions:
  Token:
    properties:
      token:
        description: JWT
        type: string
        example: eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.VFb0qJ1LRg_4ujbZoRMXnVkUgiuKq5KxWqNdbKq_G9Vvz-S1zZa9LPxtHWKa64zDl2ofkT8F6jBt_K4riU-fPg
      expiry:
        description: Время, до наступления которого токен валиден
  UserLogin:
    properties:
      email:
        description: Email пользователя
        type: string
        example: foo@example.com
      password:
        description: Пароль пользователя
        type: string
        example: my-suPer.$ecr3t
  Bus:
    properties:
      id:
        description: Идентификатор автобуса
        type: integer
        example: 1
      city:
        description: Название города
        type: string
        example: Москва
      num:
        description: Номер автобуса
        type: string
        example: "11"
  BusNoID:
    properties:
      city:
        description: Название города
        type: string
        example: Москва
      num:
        description: Номер автобуса
        type: string
        example: "11"
  City:
    properties:
      id:
        description: Идентификатор города
        type: integer
        example: 1
      name:
        description: Название города
        type: string
        example: Москва
  CityNoID:
    properties:
      name:
        description: Название города
        type: string
        example: Москва
  Stop:
    properties:
      id:
        description: Идентификатор остановки
        type: integer
        example: 1
      city:
        description: Название города
        type: string
        example: Москва
      address:
        description: Адрес остановки
        type: string
        example: ул. Улица, 1
  StopNoID:
    properties:
      city:
        description: Название города
        type: string
        example: Москва
      address:
        description: Адрес остановки
        type: string
        example: ул. Улица, 1
  Route:
    properties:
      bus_id:
        description: Идентификатор автобуса
        type: integer
        example: 1
      stop_id:
        description: Идентификатор остановки
        type: integer
        example: 1
      step:
        description: Порядковый номер остановки по маршруту автобуса
        type: integer
        example: 1
  RoutePoint:
    properties:
      step:
        description: Порядковый номер остановки по маршруту автобуса
        type: integer
        example: 1
      address:
        description: Адрес остановки
        type: string
        example: ул. Улица, 1
  RouteDetailed:
    properties:
      city:
        description: Название города
        type: string
        example: Москва
      num:
        description: Номер автобуса
        type: string
        example: "1"
      points:
        description: Точки остановок
        type: array
        items:
          $ref: "#/definitions/RoutePoint"

tags:
  - name: internal
    description: Internal routes
  - name: auth
    description: Authorization routes
  - name: buses
    description: All about buses
  - name: cities
    description: All about cities
  - name: stops
    description: All about stops
  - name: routes
    description: All about routes

paths:
  /internal/health:
    get:
      summary: Health
      tags:
        - internal
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
  /api/v1/auth/signup:
    post:
      summary: Регистрация пользователя
      tags:
        - auth
      parameters:
        - name: user
          description: Пользователь
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
            example: { Email: foo@example.com, Password: "my-suPer.$ecr3t" }
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Token"
        "400":
          description: Bad request
        "409":
          description: Conflict
        "500":
          description: Internal server error
  /api/v1/auth/login:
    post:
      summary: Аутентификация пользователя
      tags:
        - auth
      parameters:
        - name: user
          description: Пользователь
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
            example: { Email: foo@example.com, Password: "my-suPer.$ecr3t" }
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Token"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /api/v1/buses:
    get:
      summary: Получение списка действующих автобусов
      tags:
        - buses
      parameters:
        - name: ids
          description: Идентификаторы автобусов
          in: query
          type: array
          items:
            type: integer
          required: false
        - name: cities
          description: Города интересующих автобусов
          in: query
          type: array
          items:
            type: string
          required: false
        - name: nums
          description: Номера автобусов
          in: query
          type: array
          items:
            type: string
          required: false
        - name: limit
          in: query
          description: Пейджинг - выводить N первых автобусов (по умолчанию 20)
          type: integer
        - name: offset
          in: query
          description: Пейджинг - пропустить N первых автобусов
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Bus"
        "400":
          description: Bad request
        "500":
          description: Internal server error
    post:
      summary: Добавление новых автобусов
      tags:
        - buses
      parameters:
        - name: buses
          in: body
          description: Автобусы
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/BusNoID"
            example: [{ city: Москва, num: "11" }, { city: Москва, num: "15" }]
      security:
        - authorization_header: []
      description: |
        Для пользователей с типом:
        `admin`
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal server error

  /api/v1/cities:
    get:
      summary: Получение списка городов
      tags:
        - cities
      parameters:
        - name: ids
          description: Идентификаторы городов
          in: query
          type: array
          items:
            type: integer
          required: false
        - name: names
          description: Названия городов
          in: query
          type: array
          items:
            type: string
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/City"
        "400":
          description: Bad request
        "500":
          description: Internal server error
    post:
      summary: Добавление новых городов
      tags:
        - cities
      parameters:
        - name: cities
          description: Города
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/CityNoID"
            example: [{ name: Москва }, { name: Казань }, { name: Ижевск }]
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
        "500":
          description: Internal server error
    put:
      summary: Редактирование города
      tags:
        - cities
      parameters:
        - name: city
          description: Город
          in: body
          required: true
          schema:
            $ref: "#/definitions/City"
            example: { id: 3, name: Калуга }
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
        "500":
          description: Internal server error
    delete:
      summary: Удаление города
      tags:
        - cities
      parameters:
        - name: id
          description: Идентификатор города
          in: query
          type: integer
          required: false
        - name: name
          description: Название города
          in: query
          type: string
          required: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /api/v1/stops:
    get:
      summary: Получение списка остановок
      tags:
        - stops
      parameters:
        - name: ids
          description: Идентификаторы остановок
          in: query
          type: array
          items:
            type: integer
          required: false
        - name: cities
          description: Названия городов
          in: query
          type: array
          items:
            type: string
          required: false
        - name: addresses
          description: Адреса остановок
          in: query
          type: array
          items:
            type: string
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Stop"
        "400":
          description: Bad request
        "500":
          description: Internal server error
    post:
      summary: Добавление новых остановок
      tags:
        - stops
      parameters:
        - name: stops
          description: Остановки
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/StopNoID"
            example:
              [
                { city: Москва, address: "ул. Улица, 1" },
                { city: Москва, address: "ул. Улица2, 1" },
                { city: Москва, address: "ул. Улица3, 1" },
                { city: Москва, address: "ул. Улица4, 1" },
              ]
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
        "500":
          description: Internal server error
    put:
      summary: Редактирование остановки
      tags:
        - stops
      parameters:
        - name: stop
          description: Остановка
          in: body
          required: true
          schema:
            $ref: "#/definitions/Stop"
            example: { id: 3, city: Москва, address: "ул. Пушкина, 10" }
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
        "500":
          description: Internal server error
    delete:
      summary: Удаление остановки
      tags:
        - stops
      parameters:
        - name: id
          description: Идентификатор остановки
          in: query
          type: integer
          required: false
        - name: address
          description: Адрес остановки
          in: query
          type: string
          required: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /api/v1/routes:
    get:
      summary: Получение списка маршрутов автобусов
      tags:
        - routes
      parameters:
        - name: bus_ids
          description: Идентификаторы автобусов
          in: query
          type: array
          items:
            type: integer
          required: false
        - name: stop_ids
          description: Идентификаторы остановок
          in: query
          type: array
          items:
            type: integer
          required: false
        - name: steps
          description: Порядковые номера остановок по маршруту автобуса
          in: query
          type: array
          items:
            type: integer
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Route"
        "400":
          description: Bad request
        "500":
          description: Internal server error
    post:
      summary: Добавление новых маршрутов автобусов
      tags:
        - routes
      parameters:
        - name: routes
          description: Маршруты автобусов
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Route"
            example:
              [
                { bus_id: 1, stop_id: 1, step: 1 },
                { bus_id: 1, stop_id: 2, step: 2 },
                { bus_id: 1, stop_id: 3, step: 3 },
              ]
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
        "500":
          description: Internal server error
    put:
      summary: Редактирование маршрута автобуса
      tags:
        - routes
      parameters:
        - name: route
          description: Маршрут автобуса
          in: body
          required: true
          schema:
            $ref: "#/definitions/Route"
            example: { bus_id: 1, stop_id: 4, step: 3 }
            required:
              - bus_id
              - stop_id
              - step
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
        "500":
          description: Internal server error
    delete:
      summary: Удаление маршрута автобуса
      tags:
        - routes
      parameters:
        - name: bus_id
          description: Идентификатор автобуса
          in: query
          type: integer
          required: true
        - name: stop_id
          description: Идентификатор остановки
          in: query
          type: integer
          required: false
        - name: step
          description: Порядковый номер остановки по маршруту автобуса
          in: query
          type: integer
          required: false
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /api/v1/routes/detailed:
    get:
      summary: Получение списка маршрутов автобуса
      tags:
        - routes
      parameters:
        - name: bus_ids
          description: Идентификаторы автобусов
          in: query
          type: array
          items:
            type: integer
          required: true
      security:
        - authorization_header: []
      description: |
        Для пользователей с типом:
        `admin`
        `service`
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RouteDetailed"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal server error
